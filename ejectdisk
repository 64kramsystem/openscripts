#!/bin/bash

set -o errexit

declare -a v_devices

function find_usb_storage_devices {
  for device in /sys/block/*; do
    local usb_storages_info=$(udevadm info --query=property --path=$device)
    local device_name

    if echo "$usb_storages_info" | grep -q ^ID_BUS=usb; then
      device_name=$(echo "$usb_storages_info" | grep ^DEVNAME= | perl -pe 's/DEVNAME=//')
      v_devices+=("$device_name")
    fi
  done
}

function unmount_device_partitions() {
  # Cheap way of finding the mounted partitions of a given device.
  for partition in $(mount | grep "^$device" | awk '{print $1}'); do
    udisksctl unmount -b "$partition"
  done
}

function power_off_device() {
  udisksctl power-off -b "$device"

  echo "Device $device powered off."
}

if [[ $# > 1 ]] || [[ "$1" == "--help" ]] || [[ "$1" == "-h" ]]; then
  echo "Usage: ejectdisk [<block_device>]"
  echo
  echo "Unmounts and powers off a disk, like the typical desktop environment functionality."
  echo $'The prefix `/dev/` is automatically added, if not present.'
  echo
  echo 'If no arguments are passed, all the usb storage devices are ejected.'
else
  if [[ $# == 0 ]]; then
    find_usb_storage_devices
  elif [[ $1 =~ ^/dev/ ]]; then
    v_devices+=("$1")
  else
    v_devices+=("/dev/$1")
  fi

  for device in "${v_devices[@]}"; do
    unmount_device_partitions
    power_off_device
  done
fi
