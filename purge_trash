#!/bin/bash

set -o errexit
set -o nounset
set -o pipefail

c_default_threshold_days=30
c_help="Usage: $(basename "$0") [<threshold_days>]

Clean the files trashed before the given threshold in days.

Note that the tool used (\`trash-cli\` package) support deletion via filenames, so if two files are one inside the threshold, and one outside, they will both be deleted.

Default threshold: $c_default_threshold_days days."

if [[ "${1:-}" == "-h" || "${1:-}" == "--help" ]]; then
  echo "$c_help"
  exit 0
elif [[ $# -gt 1 ]]; then
  echo "Unexpected number of parameters"
  exit 1
elif ! grep -qP "^trash-cli\s+install$" <<< "$(dpkg --get-selections)"; then
  echo 'The `trash-cli` package is required!'
  exit 1
fi

threshold_days=${1:-$c_default_threshold_days}
threshold_seconds=$((threshold_days * 24 * 60 * 60))

while IFS= read -r line || [[ -n "$line" ]]; do
  trash_date=$(echo "$line" | awk '{print $1 " " $2}')

  trash_date_in_seconds=$(date -d "$trash_date" +"%s")
  current_date_in_seconds=$(date +"%s")

  if ((trash_date_in_seconds < current_date_in_seconds - threshold_seconds)); then
    echo "Deleting: $line ..."

    file_basename=$(basename "$(echo "$line" | perl -lane 'print "@F[2..$#F]"')")

    if ! trash-rm "$file_basename"; then
      echo "Could not remove \`$file_basename\` from the trash!"
    fi
  fi
done <<< "$(trash-list | sort)"
