#!/usr/bin/env bash

set -o pipefail
set -o errexit
set -o nounset
set -o errtrace
shopt -s inherit_errexit

# The command `xset dpms force off` never worked (on all the systems); additionally, it's affected by
# the (MATE) screensaver (search `inhibit_mate_screensaver.sh` in the history of `openscripts`).
#
# What instead worked, is to use the display sleep functionality instead. It's not ideal, but at least
# it works.

c_ac_setting_key=/org/mate/power-manager/sleep-display-ac
c_battery_setting_key=/org/mate/power-manager/sleep-display-battery
c_sleep_time=60 # seconds; minimum 60, otherwise, it has no effect

c_help="Usage: $(basename "$0") [-h|--help]

Executing this script alternates between enabling the display sleep (with $c_sleep_time\" delay) and disabling it.

Typically assigned to a key binding, to run when sending the display to sleep, and when resuming from
the sleep.

The script uses the A/C setting for reading the sleep time value, but sets both A/C and battery modes.

Only the MATE desktop environment is supported."

function decode_cmdline_args {
  local params
  params=$(getopt --options h --long help --name "$(basename "$0")" -- "$@")

  eval set -- "$params"

  while true; do
    case $1 in
      -h|--help)
        echo "$c_help"
        exit 0 ;;
      --)
        shift
        break ;;
    esac
  done

  if [[ $# -ne 0 ]]; then
    echo "$c_help"
    exit 1
  fi
}

function main {
  local current_sleep_value sleep_time
  current_sleep_value=$(dconf read "$c_ac_setting_key")

  if [[ $current_sleep_value -eq 0 ]]; then
    sleep_time=$c_sleep_time
  else
    sleep_time=0
  fi

  notify-send "Setting the display sleep time to $sleep_time..."

  dconf write "$c_ac_setting_key"      "$sleep_time"
  dconf write "$c_battery_setting_key" "$sleep_time"
}

decode_cmdline_args "$@"
main
