#!/usr/bin/env bash

set -o pipefail
set -o errexit
set -o nounset
set -o errtrace
shopt -s inherit_errexit

c_help="Usage: $(basename "$0") [-h|--help] <input.cbr>"

v_input_file=
v_output_file=
v_temp_dir=

function decode_cmdline_args {
  local params
  params=$(getopt --options h --long help --name "$(basename "$0")" -- "$@")

  eval set -- "$params"

  while true; do
    case $1 in
      -h|--help)
        echo "$c_help"
        exit 0 ;;
      --)
        shift
        break ;;
    esac
  done

  if [[ $# -ne 1 ]]; then
    echo "$c_help"
    exit 1
  fi

  v_input_file=$(readlink -f "$1")
}

function check_input_file {
  if [[ $v_input_file != *.cbr ]]; then
    >&2 echo "Only cbr files currently supported"
    exit 1
  fi
}

function prepare_output_file {
  v_output_file=${v_input_file%.cbr}.pdf
}

function create_temp_dir {
  v_temp_dir=$(mktemp -d)
}

function decompress_file {
  unrar x "$v_input_file" "$v_temp_dir"
}

function enter_temp_dir {
  cd "$v_temp_dir"
}

function handle_subdirs {
  local subdirs_count=
  subdirs_count=$(find . -mindepth 1 -type d | wc -l)

  case $subdirs_count in
  0)
    # Do nothing
    ;;
  1)
    # Change dir
    cd ./*/
    ;;
  *)
    >&2 echo "More than one subdirectory found! Check content of: $v_temp_dir"
    exit 1
    ;;
  esac
}

function check_file_extensions {
  local non_jpg_extensions
  non_jpg_extensions=$(find . -type f -not -name "*.jpg" | grep -v '.xml$' || true)

  if [[ -n $non_jpg_extensions ]]; then
    >&2 echo "Non jpg extensions found: $non_jpg_extensions"
    exit 1
  fi
}

function create_pdf {
  # For unclear reasons, v6.9.10-23, when the source files are not in the current directory, sometimes
  # hangs.
  # Therefore, we make sure to be in the current directory.
  #
  convert -monitor ./*.jpg "$v_output_file"
}

function delete_temp_dir {
  echo rm -r "$v_temp_dir"
}

decode_cmdline_args "$@"

check_input_file
prepare_output_file
create_temp_dir
decompress_file
enter_temp_dir
handle_subdirs
check_file_extensions
create_pdf
delete_temp_dir
