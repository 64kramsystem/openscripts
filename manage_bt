#!/usr/bin/env bash

set -o pipefail
set -o errexit
set -o nounset
set -o errtrace
shopt -s inherit_errexit

c_help="Usage: $(basename "$0") [-h|--help]

- Enables the first disabled BT device, if found
- Runs the BT manager
- Disables the first enabled BT device, if found
"

function decode_cmdline_args {
  local params
  params=$(getopt --options h --long help --name "$(basename "$0")" -- "$@")

  eval set -- "$params"

  while true; do
    case $1 in
      -h|--help)
        echo "$c_help"
        exit 0 ;;
      --)
        shift
        break ;;
    esac
  done

  if [[ $# -ne 0 ]]; then
    echo "$c_help"
    exit 1
  fi
}

# For simplicity, just find the first unblocked.
#
# Returns successfully even if no devices are found.
#
# Sample output:
#
#   ID TYPE      DEVICE      SOFT      HARD
#    1 wlan      phy0   unblocked unblocked
#    5 bluetooth hci0     blocked unblocked
#
function find_bt_device_id {
  local status=$1
  export status

  rfkill | awk '$2 == "bluetooth" && $4 == ENVIRON["status"] { print $1 }' | head -n 1 || true
}

function enable_bt_device {
  local device_id
  device_id=$(find_bt_device_id "blocked")

  if [[ -n $device_id ]]; then
    rfkill unblock "$device_id"
  fi
}

function run_bt_manager {
  /usr/bin/blueman-manager
}

function disable_bt_device {
  local device_id
  device_id=$(find_bt_device_id "unblocked")

  if [[ -n $device_id ]]; then
    rfkill block "$device_id"
  fi
}

function main {
  enable_bt_device
  run_bt_manager
  disable_bt_device
}

decode_cmdline_args "$@"
main
