#!/bin/bash

set -o nounset
set -o errexit
set -o pipefail

c_configuration_dump_filename=configuration.txt
c_log_index_number_size=6
c_stat_files_prefix=stats_
c_help="Usage: $(basename "$0") <stats_dir>

Collects the MySQL status values and dumps them into <stats_dir> (with prefix \`$c_stat_files_prefix\`), along with a dump of the server configuration (with filename $c_configuration_dump_filename).

If <stats_dir> exists, it's renamed to \`<stats_dir>.bak\`; if the renamed directory already exists, it's deleted.

The script runs every second, and needs to be terminated with Ctrl+C."

function decode_cmdline_parameters {
  eval set -- "$(getopt --options h --long help -- "$@")"

  while true ; do
    case "$1" in
      -h|--help)
        echo "$c_help"
        exit 0 ;;
      --)
        shift
        break ;;
    esac
  done

  if [[ $# -ne 1 ]]; then
    echo "$c_help"
    exit 1
  else
    stats_dir="$1"
  fi
}

function prepare_stats_dir {
  if [[ -d "${stats_dir}.bak" ]]; then
    rm -rf "${stats_dir}.bak"
  fi

  if [[ -d "$stats_dir" ]]; then
    mv "$stats_dir"{,.bak}
  fi

  mkdir "$stats_dir"
}

function dump_server_configuration {
  # The value of `optimizer_switch` is too long; ignore it.
  #
  mysql -Nte 'SHOW GLOBAL VARIABLES WHERE Variable_name NOT LIKE "optimizer_switch"' > "$stats_dir/$c_configuration_dump_filename"
}

# Input: $1=log file name input.
#
function dump_stats_snapshot {
  log_file_name="$stats_dir/${c_stat_files_prefix}$(printf "%0${c_log_index_number_size}i" "$1").log"

  mysql -Ne 'SHOW GLOBAL STATUS LIKE "Innodb\_%"' > "$log_file_name"

  # For the checkpoint age computation, see the [specific article about text processing](/Theres-more-than-one-way-to-skin-a-perl).
  #
  mysql -Ne 'SHOW ENGINE InnoDB STATUS\G' |
    awk 'BEGIN { ORS=" " }; /^(Log sequence number|Last checkpoint at)/ { print $4 }' |
    perl -lane 'print "Checkpoint_age ".($F[0] - $F[1])' >> \
    "$log_file_name"
}

function cycle_dump_stats {
  for ((i = 0; ; i++)); do
    dump_stats_snapshot "$i"
    sleep "0.$(printf '%04d' $((10000 - 10#$(date +%4N))))"
  done
}

decode_cmdline_parameters "${@}"
prepare_stats_dir
dump_server_configuration
cycle_dump_stats
