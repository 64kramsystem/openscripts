#!/bin/bash

set -o errexit
set -o nounset

# shellcheck disable=SC2016
help="Usage: $(basename "$0") [-d|--destination <dir>] [-q|--quality <quality>] [-r|--remove] <input1> {<inputN>, ...}

Encodes to m4a and applies gain.

The "'`input`'" values can be either files or directories:

- if they're files: track gain is applied (individually)
- if they're directories:
  - album gain is applied, on a directory basis, to lossless files
  - non-audio files are ignored
  - subdirectories are not descended

Compressed input audio files which are not flac are copied, without being reencoded.

The codec used is libfdk_aac, in VBR, with a default quality of 3 (~110 kbps).

Requires aacgain and a recompiled FFmpeg.

Please note that not all the input/quality combinations work (see https://hydrogenaud.io/index.php/topic,95989.msg817833.html#msg817833).
"

eval set -- "$(getopt --options hd:q:ar --long help,destination:,quality:,album,remove -- "$@")"

destination="."
quality="3"
remove_file=

while true ; do
  case "$1" in
    -h|--help)
      echo "$help"
      exit 0 ;;
    -d|--destination)
      destination="$2"
      shift 2 ;;
    -q|--quality)
      quality="$2"
      shift 2 ;;
    -r|--remove)
      remove_file=1
      shift ;;
    --)
      shift
      break ;;
  esac
done

if [[ $# -eq 0 ]]; then
  echo "$help"
  exit 1
fi

for source_filename in "$@"; do
  if [[ -f "$source_filename" ]]; then
    file_mime_type="$(file --mime-type "$source_filename" | grep -oP '\S+/\S+$')"

    case "$file_mime_type" in
    audio/x-flac | audio/x-wav )
      destination_filename="$destination/$(basename "${source_filename%.*}.m4a")"
      ffmpeg -y -i "$source_filename" -vn -c:a libfdk_aac -vbr "$quality" "$destination_filename"
      ;;
    video/mp4 | audio/mpeg )
      destination_filename="$destination/$(basename "$source_filename")"
      cp "$source_filename" "$destination_filename"
      ;;
    * )
      echo "Unsupported file type for file source: $source_filename"
      exit 1
      ;;
    esac

    # `-s -r`: ignore ffmpeg written tags, which set the album gain for each track separately.
    #
    aacgain -k -r -s r "$destination_filename"

    [[ $remove_file == 1 ]] && rm -f "$source_filename" || true
  elif [[ -d "$source_filename" ]]; then
    sub_destination="$destination/$(basename "$source_filename")"

    mkdir -p "$sub_destination"

    encoded_audio_filenames=()

    for sub_source_filename in "$source_filename"/*; do
      file_mime_type="$(file --mime-type "$sub_source_filename" | grep -oP '\S+/\S+$')"

      case "$file_mime_type" in
      audio/x-flac | audio/x-wav )
        sub_destination_filename="$sub_destination/$(basename "${sub_source_filename%.*}.m4a")"
        ffmpeg -y -i "$sub_source_filename" -vn -c:a libfdk_aac -vbr "$quality" "$sub_destination_filename"
        encoded_audio_filenames+=("$sub_destination_filename")
        ;;
      video/mp4 | audio/mpeg )
        sub_destination_filename="$sub_destination/$(basename "$sub_source_filename")"
        cp "$sub_source_filename" "$sub_destination_filename"
        encoded_audio_filenames+=("$sub_destination_filename")
        ;;
      * )
        if [[ "$file_mime_type" == "audio/"* ]]; then
          echo "Unsupported audio file!: $sub_source_filename"
          exit 1
        elif [[ "$file_mime_type" == "image/"* ]]; then
          sub_destination_filename="$sub_destination/$(basename "$sub_source_filename")"
          cp "$sub_source_filename" "$sub_destination_filename"
        fi
        # ignore other cases (eg. text files)
        ;;
      esac
    done

    # See `-s -r` note in the previous invocation.
    #
    aacgain -k -a -s r "${encoded_audio_filenames[@]}"

    [[ $remove_file == 1 ]] && rm -r "$source_filename" || true
  else
    echo "Source type not recognized: $source_filename"
    exit 1
  fi
done
